---
- name: Update boxes
  import_playbook: update_boxes.yml

- name: Prepare hosts
  hosts: boxes
  ignore_unreachable: true
  gather_facts: yes

  tasks:
    - name: Get the version of the running kernel
      command: uname -r
      register: uname
      changed_when: false

    - name: Install packages
      apt:
        name:
          - chrony
          - git
          - rsync
          - wget
          - net-tools
          - bind9-dnsutils
          - build-essential
          - dkms
          - "linux-headers-{{ uname.stdout }}"
        state: present
        update_cache: true

    - name: Create vagrant user
      user:
        name: vagrant
        shell: /bin/bash
        # password: vagrant
        # yamllint disable rule:line-length
        password: "$6$wkhQhItofDV4N5e0$4naqH2UiDOEfqScSmTfUBA7FWfioJ7XKK1aTC9SUfQ10tzjH.l7Xzaf1zLO3eEQf7PI21YVUgJ/c0etUPK4Vm0"

    - name: Add vagrant user to sudoers
      community.general.sudoers:
        name: vagrant
        commands: ALL
        nopassword: true
        user: vagrant

    - name: Add vagrant insecure key
      authorized_key:
        user: vagrant
        state: present
        key: https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub

    - name: Remove default image user
      user:
        name: "{{ 'debian' if ansible_distribution == 'Debian' else 'ubuntu' }}"
        state: absent
        remove: true

    - name: Configure files
      lineinfile:
        path: "{{ item.file }}"
        line: "{{ item.content }}"
        regexp: "{{ item.regexp }}"
        create: true
        mode: 0644
      loop: "{{ file_configuration }}"
      register: needs_update_grub

    - name: Update grub
      command: update-grub
      changed_when: true
      when: needs_update_grub.changed

    - name: Delete current netplan configurations
      shell: rm -f /etc/netplan/*
      changed_when: true

    - name: Copy netplan new config
      copy:
        src: ./files/netplan.yml
        dest: /etc/netplan/01-netcfg.yaml
        mode: 0600

    - name: Check if guest tools are already installed
      stat:
        path: "/lib/modules/{{ uname.stdout }}/misc/vboxsf.ko"
      register: vbox_tools_installed

    - name: Mount Guest tools iso
      ansible.posix.mount:
        path: /mnt
        src: /dev/sr0
        fstype: iso9660
        opts: ro
        state: ephemeral
      when: not vbox_tools_installed.stat.exists

    - name: Install Guest tools
      command: ./VBoxLinuxAdditions.run --nox11
      args:
        chdir: /mnt
      changed_when: true
      failed_when: guest_tools_installed.rc != 2
      register: guest_tools_installed
      when: not vbox_tools_installed.stat.exists

    - name: Unmount Guest tools iso
      ansible.posix.mount:
        path: /mnt
        state: unmounted
      when: not vbox_tools_installed.stat.exists

    - name: Copy scripts
      copy:
        src: "{{ inventory_hostname }}/scripts/{{ item }}"
        dest: "/root/{{ item }}"
        mode: 0755
      loop:
        - motd.sh
        - cleanup.sh

    - name: Run scripts
      shell: "./{{ item }}"
      args:
        executable: /bin/bash
        chdir: /root
      changed_when: true
      loop:
        - motd.sh
        - cleanup.sh

    - name: Clean up root user
      shell: |
        cat /dev/null > .ssh/authorized_keys
        rm -f *.sh
        rm -rf .ansible/
        rm -rf snap/
        history -c && history -w
      args:
        executable: /bin/bash
        chdir: /root
      changed_when: true

    # According to Vagrant: Up and Running: “This fixes fragmentation issues with the underlying disk,
    # which allows it to compress much more efficiently later.”
    - name: Zero out the drive
      shell: |
        set +o history
        dd if=/dev/zero of=/EMPTY bs=1M
        rm -f /EMPTY
      args:
        executable: /bin/bash
      changed_when: true
